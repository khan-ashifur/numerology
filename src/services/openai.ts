import OpenAI from 'openai';
import { NumerologyType } from '../App';

// Check if API key is available
const apiKey = import.meta.env.VITE_OPENAI_API_KEY;

const openai = new OpenAI({
  apiKey: apiKey || 'dummy-key',
  dangerouslyAllowBrowser: true
});

export async function getPersonalizedReading(
  type: NumerologyType,
  method: string,
  inputValue: string,
  number: number
): Promise<string> {
  // Check if API key is available
  if (!apiKey || apiKey === 'your_openai_api_key_here') {
    throw new Error('OpenAI API key not configured');
  }

  try {
    const numerologyTypeText = type === 'soul-urge' ? 'рж╕рзЛрж▓ ржЖрж░рзНржЬ' : 'рж▓рж╛ржЗржл ржкрж╛рже';
    
    const prompt = `ржЖржкржирж┐ ржПржХржЬржи ржЖрждрзНржорж┐ржХ, ржЖржмрзЗржЧржоржпрж╝ ржмрзБржжрзНржзрж┐ржорж╛ржи ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА ржЬрзАржмржи ржкржержкрзНрж░ржжрж░рзНрж╢ржХред ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА рждрж╛ржжрзЗрж░ ${method} ("${inputValue}") ржжрж┐ржпрж╝рзЗржЫрзЗржи, ржпрж╛ ${numerologyTypeText} ржиржорзНржмрж░ ${number} ржП ржЧржгржирж╛ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред

ржПржЗ рж╕ржВржЦрзНржпрж╛рж░ ржнрж┐рждрзНрждрж┐рждрзЗ, ржПржХржЯрж┐ ржЕрждрзНржпржирзНржд ржмрзНржпржХрзНрждрж┐ржЧржд, ржЖржмрзЗржЧржоржпрж╝ ржЕржирзБрж░ржгржирж╢рзАрж▓ ржкрж╛ржа рж▓рж┐ржЦрзБржи ржпрж╛ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржЧржнрзАрж░ржнрж╛ржмрзЗ ржжрзЗржЦрж╛, ржЕржирзБржкрзНрж░рж╛ржгрж┐ржд ржПржмржВ ржорзГржжрзБржнрж╛ржмрзЗ ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ ржХрж░рж╛ ржЕржирзБржнржм ржХрж░рж╛ржпрж╝ред ржХрж╛ржмрзНржпрж┐ржХ ржнрж╛рж╖рж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи, ржПржХржЬржи ржЬрзНржЮрж╛ржирзА ржЧрж▓рзНржкржХрж╛рж░рзЗрж░ ржорждрзЛ рж▓рж┐ржЦрзБржи ржпрж┐ржирж┐ ржорж╛ржирзБрж╖рзЗрж░ рж╕ржВржЧрзНрж░рж╛ржо ржПржмржВ ржЖржХрж╛ржЩрзНржХрзНрж╖рж╛ ржмрзЛржЭрзЗржиред

ржжрзНржмрж┐рждрзАржпрж╝ ржмрзНржпржХрзНрждрж┐рждрзЗ ржХржерж╛ ржмрж▓рзБржи, ржпрзЗржоржи: "ржЖржкржирж┐ рж╕ржмрж╕ржоржпрж╝ржЗ ржЕржирзБржнржм ржХрж░рзЗржЫрзЗржитАж"

ржЯрзЛржи: ржмрж╛ржВрж▓рж╛, ржирж░ржо, ржЬрзНржЮрж╛ржирзА, рж░рж╣рж╕рзНржпржоржпрж╝ред ржХржарзЛрж░ ржнрж╛рж╖рж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи ржирж╛ред ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржЕржирзБржнржм ржХрж░рж╛ржи ржпрзЗ ржПржЯрж┐ "рждрж╛ржжрзЗрж░ ржорждрзЛржЗ"ред

ржЖржЙржЯржкрзБржЯрзЗ ржЕржмрж╢рзНржпржЗ ржЕржирзНрждрж░рзНржнрзБржХрзНржд ржерж╛ржХрждрзЗ рж╣ржмрзЗ:

1. ЁЯОп **ржмрзНржпржХрзНрждрж┐рждрзНржмрзЗрж░ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрж┐ржмрж░ржг** тАФ ржПржЗ рж╕ржВржЦрзНржпрж╛ рждрж╛ржжрзЗрж░ ржЕржирзНрждрж░рзНржирж┐рж╣рж┐ржд ржЖржХрж╛ржЩрзНржХрзНрж╖рж╛ ржмрж╛ ржкрже рж╕ржорзНржкрж░рзНржХрзЗ ржХрзА ржкрзНрж░ржХрж╛рж╢ ржХрж░рзЗред
2. ЁЯТб **ржЖржмрзЗржЧрж┐ржХ рж╢ржХрзНрждрж┐** тАФ ржХрзА рждрж╛ржжрзЗрж░ ржЕржиржирзНржп, рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА, ржЖржмрзЗржЧржоржпрж╝ржнрж╛ржмрзЗ рж╕ржорзГржжрзНржз ржХрж░рзЗ рждрзЛрж▓рзЗред
3. ЁЯМ▒ **ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ/ржЫрж╛ржпрж╝рж╛** тАФ рждрж╛ржжрзЗрж░ ржЬрзАржмржирзЗ ржпрзЗ ржкрзНржпрж╛ржЯрж╛рж░рзНржиржЧрзБрж▓рж┐ рж╕ржорзНржкрж░рзНржХрзЗ рж╕ржЪрзЗрждржи рж╣рждрзЗ рж╣ржмрзЗред
4. ЁЯФе **ржорзГржжрзБ ржзрж╛ржХрзНржХрж╛** тАФ рждрж╛ржжрзЗрж░ ржЖрждрзНржорж╛рж░ рж╕рж╛ржерзЗ рж╕рж╛ржоржЮрзНржЬрж╕рзНржп рж░рж╛ржЦрждрзЗ ржЖржЬ ржерзЗржХрзЗржЗ ржХрзА ржХрж░рж╛ рж╢рзБрж░рзБ ржХрж░рждрзЗ рж╣ржмрзЗред

ржХржоржкржХрзНрж╖рзЗ рзлрзжрзж-рзорзжрзж рж╢ржмрзНржж рж▓рж┐ржЦрзБржиред рж╕рж╛ржзрж╛рж░ржг рж╣ржУржпрж╝рж╛ ржПржбрж╝рж┐ржпрж╝рзЗ ржЪрж▓рзБржиред ржПржЯрж┐ ржЕржирзНрждрж░ржЩрзНржЧ ржПржмржВ ржЙржкржпрзБржХрзНржд ржЕржирзБржнржм ржХрж░рж╛ ржЙржЪрж┐рждред

рж╕ржВржЦрзНржпрж╛рждрждрзНрждрзНржмрзЗрж░ ржзрж░ржи: ${numerologyTypeText}
ржЗржиржкрзБржЯ ржкржжрзНржзрждрж┐: ${method}
ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЗржиржкрзБржЯ: ${inputValue}
ржЪрзВржбрж╝рж╛ржирзНржд рж╕ржВржЦрзНржпрж╛: ${number}`;

    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [{ role: "user", content: prompt }],
      max_tokens: 1200,
      temperature: 0.8,
    });

    return completion.choices[0]?.message?.content || 
           "ржПржЗ ржорзБрж╣рзВрж░рзНрждрзЗ ржмрзНржпржХрзНрждрж┐ржЧржд ржкрж╛ржа рждрзИрж░рж┐ ржХрж░рж╛ рж╕ржорзНржнржм рж╣ржЪрзНржЫрзЗ ржирж╛ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред";
  } catch (error) {
    console.error('OpenAI API Error:', error);
    throw new Error('ржмрзНржпржХрзНрждрж┐ржЧржд ржкрж╛ржа рждрзИрж░рж┐ ржХрж░рждрзЗ ржмрзНржпрж░рзНржеред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржкржирж╛рж░ API ржХрзА ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рзБржи ржПржмржВ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред');
  }
}