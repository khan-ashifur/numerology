import OpenAI from 'openai';
import { NumerologyType } from '../App';

// Check if API key is available
const apiKey = import.meta.env.VITE_OPENAI_API_KEY;

const openai = new OpenAI({
  apiKey: apiKey || 'dummy-key',
  dangerouslyAllowBrowser: true,
});

export async function getPersonalizedReading(
  type: NumerologyType,
  method: string,
  inputValue: string,
  number: number
): Promise<string> {
  if (!apiKey || apiKey === 'your_openai_api_key_here') {
    throw new Error('OpenAI API key not configured');
  }

  try {
    const numerologyTypeText = type === 'soul-urge' ? 'рж╕рзЛрж▓ ржЖрж░рзНржЬ' : 'рж▓рж╛ржЗржл ржкрж╛рже';

    const prompt = `ржЖржкржирж┐ ржПржХржЬржи ржЕржнрж┐ржЬрзНржЮ, ржЬрзАржмржиржжрж░рзНрж╢рзА ржПржмржВ рж╕рж╣рж╛ржирзБржнрзВрждрж┐рж╢рзАрж▓ ржмрж╛ржЩрж╛рж▓рж┐ ржХрзЛржЪред ржЖржкржирж╛рж░ ржХрж╛ржЬ рж╣рж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржирж╛ржо ржУ ржЬржирзНржорждрж╛рж░рж┐ржЦ ржерзЗржХрзЗ ржЧржгрж┐ржд ржХрж░рж╛ рж╕ржВржЦрзНржпрж╛рж░ ржнрж┐рждрзНрждрж┐рждрзЗ ржПржХржЯрж┐ ржЕржирзНрждрж░ржЩрзНржЧ, ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржПржмржВ ржЬрзАржмржирзЗрж░ ржЧржнрзАрж░ рж╕рждрзНржп рж╕рзНржкрж░рзНрж╢ ржХрж░рзЗ ржПржоржи ржмрзНржпржХрзНрждрж┐ржЧржд ржкрж░рж╛ржорж░рзНрж╢ рждрзИрж░рж┐ ржХрж░рж╛ред

ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА "${inputValue}" ржЗржиржкрзБржЯ ржжрж┐рзЯрзЗржЫрзЗржи (${method} ржкржжрзНржзрждрж┐рждрзЗ), ржпрж╛ ${numerologyTypeText} ржиржорзНржмрж░ ржПржмржВ ржЪрзВржбрж╝рж╛ржирзНржд рж╕ржВржЦрзНржпрж╛ рж╣рж▓рзЛ ${number}ред

ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржирж┐ржЪрзЗрж░ рзкржЯрж┐ ржЕржВрж╢рзЗ рж▓рзЗржЦрж╛ржЯрж┐ рж╕рж╛ржЬрж╛ржиред ржкрзНрж░рждрж┐ржЯрж┐ ржЕржВрж╢ рж╕рзНржкрж╖рзНржЯ рж╣рзЗржбрж┐ржВ ржжрж┐рзЯрзЗ рж╢рзБрж░рзБ ржХрж░рзБржиред ржкрзНрж░рждрж┐ржЯрж┐ ржЕржВрж╢рзЗ ржХржоржкржХрзНрж╖рзЗ рзорзжтАУрззрзжрзж рж╢ржмрзНржж ржерж╛ржХрзБржХ ржпрзЗржи ржЧржнрзАрж░рждрж╛ ржмрзЛржЭрж╛ ржпрж╛рзЯред

---

ЁЯОп **ржмрзНржпржХрзНрждрж┐рждрзНржмрзЗрж░ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрж┐ржмрж░ржг**  
ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЪрж┐ржирзНрждрж╛ржнрж╛ржмржирж╛, ржЖржЪрж░ржг ржУ ржорж╛ржирж╕рж┐ржХ ржкрзНрж░ржмржгрждрж╛ ржХрзЗржоржи тАФ рж╕рзЗржЯрж┐ рж╕рж╣ржЬ ржнрж╛рж╖рж╛ржпрж╝ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзБржиред ржпрзЗржи ржХрзЗржЙ ржкрзНрж░ржержоржмрж╛рж░рзЗржУ ржмрзБржЭрждрзЗ ржкрж╛рж░рзЗ, "рж╣рзНржпрж╛ржБ, ржПржЯрж╛ рждрзЛ ржЖржорж╛рж░ ржХржерж╛ржЗ!"

ЁЯТб **ржЖржмрзЗржЧрж┐ржХ рж╢ржХрзНрждрж┐**  
ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржорж╛ржирж╕рж┐ржХ рж╢ржХрзНрждрж┐, ржирзИрждрж┐ржХ ржмрж┐рж╢рзНржмрж╛рж╕, ржорзВрж▓рзНржпржмрзЛржз ржмрж╛ ржЕржирзНржпржХрзЗ ржкрзНрж░ржнрж╛ржмрж┐ржд ржХрж░рж╛рж░ ржХрзНрж╖ржорждрж╛ ржирж┐рзЯрзЗ рж▓рж┐ржЦрзБржиред ржПржоржи ржЙржжрж╛рж╣рж░ржг ржжрж┐ржи ржпрж╛ ржмрж╛рж╕рзНрждржм ржЬрзАржмржирзЗрж░ рж╕ржЩрзНржЧрзЗ ржорж┐рж▓ ржЦрж╛ржпрж╝ред ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржпрзЗржи ржмрзБржЭрждрзЗ ржкрж╛рж░рзЗржи, рждрж╛рж░ ржХрзЛржи ржЕржнрзНржпрж╛рж╕ ржмрж╛ ржоржирзЛржнрж╛ржм рждрж╛ржХрзЗ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ рждрзЛрж▓рзЗред

ЁЯМ▒ **ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ ржмрж╛ ржнрзБрж▓ ржЕржнрзНржпрж╛рж╕**  
ржХрзЛржи ржнрзБрж▓ ржЕржнрзНржпрж╛рж╕ ржмрж╛ ржорж╛ржирж╕рж┐ржХ ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ рждрж╛рж░ ржЬрзАржмржирзЗ ржмрж╛рж░ржмрж╛рж░ ржПрж╕рзЗржЫрзЗ? рждрж╛ рж╕ржВржмрзЗржжржирж╢рзАрж▓ржнрж╛ржмрзЗ ржмрж▓рзБржи ржпрзЗржи рж╕рзЗ ржмрж┐рж░ржХрзНржд ржирж╛ рж╣ржпрж╝рзЗ ржмрж░ржВ ржнрж╛ржмрждрзЗ рж╢рзЗржЦрзЗред ржЕрждрзАржд ржмрзНржпржерж╛ ржмрж╛ ржкрзНржпрж╛ржЯрж╛рж░рзНржи ржмрзЛржЭрж╛рждрзЗ рж╕рж╛рж╣рж╕рзА рж╣ржи ржХрж┐ржирзНрждрзБ ржжрзЯрж╛рж▓рзБ ржнржЩрзНржЧрж┐рждрзЗред

ЁЯФе **ржкрж░рж╛ржорж░рзНрж╢ ржмрж╛ ржорзГржжрзБ ржзрж╛ржХрзНржХрж╛**  
ржЖржЬ ржерзЗржХрзЗ ржХрзАржнрж╛ржмрзЗ ржЬрзАржмржирзЗрж░ ржЫрзЛржЯ ржкрж░рж┐ржмрж░рзНрждржирзЗ ржмрзЬ ржкрж╛рж░рзНржержХрзНржп ржЖржирж╛ рж╕ржорзНржнржм тАФ рж╕рзЗржЯрж┐ ржмрж╛рж╕рзНрждржмрж┐ржХ ржУ ржЙрзОрж╕рж╛рж╣ржмрзНржпржЮрзНржЬржХ ржнрж╛рж╖рж╛ржпрж╝ ржмрж▓рзБржиред ржпрзЗржи ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржЖржЬржХрзЗржЗ ржХрж┐ржЫрзБ ржХрж░рждрзЗ ржЪрж╛ржиред

---

**ржнрж╛рж╖рж╛рж░ ржзрж░ржи:** ржпрзЗржи ржПржХржЬржи ржжржпрж╝рж╛рж▓рзБ ржмржирзНржзрзБ ржмрж╛ ржЬрзАржмржи-ржжрж░рзНрж╢рзА ржЕржнрж┐ржнрж╛ржмржХ рж▓рж┐ржЦржЫрзЗржиред  
**рж╕ржорзНржмрзЛржзржи:** "ржЖржкржирж┐"  
**ржЯрзЛржи:** ржирж░ржо, ржЧржнрзАрж░, ржЕржирзБржкрзНрж░рж╛ржгрж┐ржд, рж╣рзБржорж╛рзЯрзВржи ржЖрж╣ржорзЗржжрзЗрж░ ржоржд рж╕рж╣ржЬ ржХрж┐ржирзНрждрзБ ржЖржмрзЗржЧржкрзНрж░ржмржгред

рж╢рзЗрж╖рзЗ ржПржХржЯрж┐ ржЙржкрж╕ржВрж╣рж╛рж░ рж▓рж┐ржЦрзБржи ржпрж╛ рждрж╛ржжрзЗрж░ ржоржирзЗ ржЖрж╢рж╛ ржЬрж╛ржЧрж╛ржпрж╝ ржПржмржВ ржмрж▓рзБржи:  
"ржЪрж┐ржирзНрждрж╛ржЧрзБрж▓рж┐рж░ ржерзЗржХрзЗ ржорзБржХрзНрждрж┐ ржкрзЗрждрзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи, ржПржмржВ ржЬрзАржмржирзЗрж░ ржЖржиржирзНржж ржПржмржВ рж╕рзБржорж┐рждрзНрждрж┐рж░ ржжрж┐ржХрзЗ ржкрзНрж░ржЬрзНржЮрж╛ ржХрж░рзБржиред ржзржирзНржпржмрж╛ржжред ЁЯЩП"`;

    const completion = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [{ role: "user", content: prompt }],
      max_tokens: 1500,
      temperature: 0.85,
    });

    return completion.choices[0]?.message?.content || 
           "ржПржЗ ржорзБрж╣рзВрж░рзНрждрзЗ ржмрзНржпржХрзНрждрж┐ржЧржд ржкрж╛ржа рждрзИрж░рж┐ ржХрж░рж╛ рж╕ржорзНржнржм рж╣ржЪрзНржЫрзЗ ржирж╛ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред";
  } catch (error) {
    console.error('OpenAI API Error:', error);
    throw new Error('ржмрзНржпржХрзНрждрж┐ржЧржд ржкрж╛ржа рждрзИрж░рж┐ ржХрж░рждрзЗ ржмрзНржпрж░рзНржеред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржкржирж╛рж░ API ржХрзА ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рзБржи ржПржмржВ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред');
  }
}
